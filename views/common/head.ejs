<!-- Required meta tags -->
<meta charset="utf-8">
<title>LMS courses</title>
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

<link href="https://fonts.googleapis.com/css2?family=Metal+Mania&family=Permanent+Marker&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Play&family=Source+Code+Pro:ital,wght@1,200;1,500&display=swap"
      rel="stylesheet">
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"
      integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">
<link href="https://fonts.googleapis.com/css2?family=Metal+Mania&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" href="/vendors/alertifyjs/css/alertify.min.css">
<link rel="stylesheet" href="/vendors/alertifyjs/css/themes/bootstrap.min.css">
<link rel="stylesheet" href="path/to/font-awesome/css/font-awesome.min.css">



<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"
        integrity="sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI"
        crossorigin="anonymous"></script>
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
        integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
        crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
        integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
        crossorigin="anonymous"></script>
<script src="/vendors/alertifyjs/alertify.min.js"></script>


<script>
    let params = {
        get: (name) => {
            if (name = (new RegExp('[?&]' + encodeURIComponent(name) + '=([^&]*)')).exec(location.search))
                return decodeURIComponent(name[1]);
        }
    }

    function findGetParameter(parameterName) {
        var result = null,
            tmp = [];
        location.search
            .substr(1)
            .split("&")
            .forEach(function (item) {
                tmp = item.split("=");
                if (tmp[0] === parameterName) result = decodeURIComponent(tmp[1]);
            });
        return result;
    }

    let app_id = "37b2c638-5135-429b-bee2-cb615a876fe0";
    let auth_url = "https://auth.grow90.org/";
    let auth_db_url = "https://db.grow90.org/v1/graphql";
    let db_url = "https://lmsdb.herokuapp.com/v1/graphql";
    fetchMyDB = (query, variables) => {
        return new Promise((resolve, reject) => {
            fetch(db_url, {
                method: "post",
                headers: {
                    "app_id": app_id,
                    "content-type": "application/json",
                    "Authorization": "Bearer "+localStorage.getItem('auth_token')
                },
                body: JSON.stringify({query: query, variables: variables})
            }).then(result => resolve(result.json()))
                .catch(error => reject(error));
        })
    }
    fetchMyAuthDB = (query, variables) => {
        return new Promise((resolve, reject) => {
            fetch(auth_db_url, {
                method: "post",
                headers: {
                    "app_id": app_id,
                    "content-type": "application/json",
                    "Authorization": "Bearer "+localStorage.getItem('auth_token')
                },
                body: JSON.stringify({query: query, variables: variables})
            }).then(result => resolve(result.json()))
                .catch(error => reject(error));
        })
    }
</script>

</head>
